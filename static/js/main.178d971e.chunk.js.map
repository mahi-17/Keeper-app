{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","isExpanded","setExpanded","note","setNote","handleChange","event","target","name","value","prevNote","autoComplete","onChange","placeholder","rows","Zoom","in","Fab","onAdd","preventDefault","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","map","ReactDOM","render","document","getElementById"],"mappings":"yLAaeA,MAVf,WACE,OACE,iCACE,+BACE,cAAC,IAAD,IADF,WAC2B,cAAC,IAAD,QAIhC,ECAcC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,iCACE,kDAAgBF,MAGrB,E,iBCWcG,MAjBf,SAAcC,GAMZ,OACE,sBAAKC,UAAU,OAAf,UACE,6BAAKD,EAAME,QACX,4BAAIF,EAAMG,UACV,wBAAQC,QARZ,WACEJ,EAAMK,SAASL,EAAMM,GACtB,EAMG,SACE,cAAC,IAAD,QAIP,E,gDCsDcC,MAnEf,SAAoBP,GAElB,MAAkCQ,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KAGA,EAAwBF,mBAAS,CAC/BN,MAAO,GACPC,QAAS,KAFX,mBAAOQ,EAAP,KAAaC,EAAb,KAMA,SAASC,EAAaC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdL,GAAQ,SAACM,GACP,OAAO,2BACFA,GADL,kBAEGF,EAAOC,GAEX,GACF,CAiBD,OACE,8BACE,uBAAMhB,UAAU,cAAckB,aAAa,MAA3C,UACGV,GACC,uBACEO,KAAK,QACLI,SAAUP,EACVI,MAAON,EAAKT,MACZmB,YAAY,UAIhB,0BACEL,KAAK,UACLZ,QAlBR,WACEM,GAAY,EACb,EAiBOU,SAAUP,EACVI,MAAON,EAAKR,QACZkB,YAAY,iBACZC,KAAMb,EAAa,EAAI,IAEzB,cAACc,EAAA,EAAD,CAAMC,GAAIf,EAAV,SACE,cAACgB,EAAA,EAAD,CAAKrB,QAnCb,SAAoBU,GAClBd,EAAM0B,MAAMf,GACZC,EAAQ,CACNV,MAAO,GACPC,QAAS,KAEXW,EAAMa,gBACP,EA4BO,SACE,cAAC,IAAD,YAMX,ECxBcC,MAxCf,WAEE,MAA0BpB,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KAUA,SAASC,EAAWzB,GAClBwB,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GACjC,OAAOA,IAAU7B,CAClB,GACF,GACF,CAED,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYoB,MAlBhB,SAAiBU,GACfN,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBI,GACvB,GACF,IAeIP,EAAMQ,KAAI,SAACH,EAAUC,GACpB,OACE,cAAC,EAAD,CAEE7B,GAAI6B,EACJjC,MAAOgC,EAAShC,MAChBC,QAAS+B,EAAS/B,QAClBE,SAAU0B,GAJLI,EAOV,IACD,cAAC,EAAD,MAGL,ECxCDG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.178d971e.chunk.js","sourcesContent":["import React from \"react\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <HighlightIcon /> Keeper <HighlightIcon /> \n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Note(props) {\n  // Delete note when clicked\n  function handleClick() {\n    props.onDelete(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}>\n        <DeleteIcon />\n      </button>\n    </div>\n  );\n}\n\nexport default Note;","import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  // Declare state variable for expanding input component\n  const [isExpanded, setExpanded] = useState(false);\n\n  // Declare state variable for note entered by user\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  // Update note to user input \n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  // Submit note entered by user\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  // Expand note card\n  function expand() {\n    setExpanded(true);\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\" autoComplete=\"off\">\n        {isExpanded && (\n          <input\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n          />\n        )}\n\n        <textarea\n          name=\"content\"\n          onClick={expand}\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={isExpanded ? 3 : 1}\n        />\n        <Zoom in={isExpanded}>\n          <Fab onClick={submitNote}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  // Declare state variable for notes\n  const [notes, setNotes] = useState([]);\n\n  // Add new note to the list\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  // Delete note function\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}